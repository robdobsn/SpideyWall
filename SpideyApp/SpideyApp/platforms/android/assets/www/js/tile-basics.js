// Generated by CoffeeScript 1.7.1
var TileBasics, TilePosition;

TileBasics = (function() {
  function TileBasics(bkColour, colSpan, rowSpan, clickFn, clickParam, tileName, visibility, parentTag, tileType, iconName, isFavourite, mediaPlayHelper) {
    this.bkColour = bkColour;
    this.colSpan = colSpan;
    this.rowSpan = rowSpan;
    this.clickFn = clickFn;
    this.clickParam = clickParam;
    this.tileName = tileName;
    this.visibility = visibility;
    this.parentTag = parentTag;
    this.tileType = tileType;
    this.iconName = iconName;
    this.isFavourite = isFavourite;
    this.mediaPlayHelper = mediaPlayHelper;
  }

  TileBasics.prototype.setTierGroupIds = function(tierIdx, groupIdx) {
    this.tierIdx = tierIdx;
    this.groupIdx = groupIdx;
  };

  return TileBasics;

})();

TilePosition = (function() {
  function TilePosition(tileValid, xPos, yPos, colSpan, rowSpan) {
    this.tileValid = tileValid;
    this.xPos = xPos != null ? xPos : 0;
    this.yPos = yPos != null ? yPos : 0;
    this.colSpan = colSpan != null ? colSpan : 0;
    this.rowSpan = rowSpan != null ? rowSpan : 0;
  }

  TilePosition.prototype.intersects = function(tilePos) {
    if (!this.tileValid) {
      return false;
    }
    if (this.xPos > tilePos.xPos + tilePos.colSpan - 1) {
      return false;
    }
    if (this.xPos + this.colSpan - 1 < tilePos.xPos) {
      return false;
    }
    if (this.yPos > tilePos.yPos + tilePos.rowSpan - 1) {
      return false;
    }
    if (this.yPos + this.rowSpan - 1 < tilePos.yPos) {
      return false;
    }
    return true;
  };

  return TilePosition;

})();
