// Generated by CoffeeScript 1.8.0
var PacManDots,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

PacManDots = (function() {
  function PacManDots(pillPositions, dotSize, dotScore, spideyWall, spideyAppUI) {
    this.pillPositions = pillPositions;
    this.dotSize = dotSize;
    this.dotScore = dotScore;
    this.spideyWall = spideyWall;
    this.spideyAppUI = spideyAppUI;
    this.generateGameDots();
    this.dotsEaten = 0;
    return;
  }

  PacManDots.prototype.showInitially = function() {
    this.createOrUpdate(true);
  };

  PacManDots.prototype.resizeUI = function() {
    this.createOrUpdate(false);
  };

  PacManDots.prototype.createOrUpdate = function(create) {
    var dot, dotColor, dotIdx, dotPoint, dotSz, dotSzD2, points, spriteXY, _i, _len, _ref;
    points = this.spideyWall.getPoints();
    _ref = this.gameDots;
    for (dotIdx = _i = 0, _len = _ref.length; _i < _len; dotIdx = ++_i) {
      dot = _ref[dotIdx];
      dotColor = dot.dotType === 0 ? "white" : "magenta";
      dotSz = dot.dotType === 0 ? this.dotSize : this.dotSize * 3;
      dotSzD2 = dotSz / 2;
      dotPoint = points[dotIdx];
      spriteXY = this.spideyAppUI.getPositionOfSprite(dotPoint);
      spriteXY.x -= dotSzD2;
      spriteXY.y -= dotSzD2;
      if (create) {
        $("#spriteOverlay").prepend("<div id=\"dot_" + dotIdx + "\" \n	style=\"position:absolute; visibility:visible; top:" + spriteXY.y + "px; left:" + spriteXY.x + "px; width:" + this.dotSz + "px; height:" + dotSz + "px\" >\n				        <svg style=\"position:absolute\" width=\"" + dotSz + "px\" height=\"" + dotSz + "px\">\n				             <circle cx=\"" + dotSzD2 + "\" cy=\"" + dotSzD2 + "\" r=\"" + dotSzD2 + "\" stroke-width=\"0\" fill=\"" + dotColor + "\"/>\n				        </svg>\n				    </div>");
      } else {
        $("#dot_" + dotIdx).css({
          top: spriteXY.y,
          left: spriteXY.x
        });
      }
    }
  };

  PacManDots.prototype.getDotsEaten = function() {
    return this.dotsEaten;
  };

  PacManDots.prototype.generateGameDots = function() {
    var dotType, pillIdx, pillPt, point, pointIdx, tmpPillPoints, _i, _j, _len, _len1, _ref, _ref1;
    tmpPillPoints = [];
    _ref = this.pillPositions;
    for (pillIdx = _i = 0, _len = _ref.length; _i < _len; pillIdx = ++_i) {
      pillPt = _ref[pillIdx];
      tmpPillPoints.push(pillPt.pointIdx);
    }
    this.gameDots = [];
    _ref1 = this.spideyWall.getPoints();
    for (pointIdx = _j = 0, _len1 = _ref1.length; _j < _len1; pointIdx = ++_j) {
      point = _ref1[pointIdx];
      dotType = 0;
      pillIdx = -1;
      if (__indexOf.call(tmpPillPoints, pointIdx) >= 0) {
        pillIdx = tmpPillPoints.indexOf(pointIdx);
        dotType = this.pillPositions[pillIdx];
      }
      this.gameDots.push({
        dotType: dotType,
        pillIdx: pillIdx,
        dotScore: this.dotScore
      });
    }
  };

  PacManDots.prototype.beEaten = function(pointIdx) {
    var dotType;
    if (this.gameDots[pointIdx] == null) {
      debugger;
    }
    dotType = 0;
    this.dotsEaten += this.gameDots[pointIdx].dotScore;
    if (this.gameDots[pointIdx].dotScore !== 0) {
      dotType = this.gameDots[pointIdx].dotType;
    }
    this.gameDots[pointIdx].dotScore = 0;
    $("#dot_" + pointIdx).css({
      visibility: "hidden"
    });
    return dotType;
  };

  return PacManDots;

})();
