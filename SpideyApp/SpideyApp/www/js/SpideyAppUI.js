// Generated by CoffeeScript 1.8.0
var SpideyAppUI,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

SpideyAppUI = (function() {
  function SpideyAppUI() {
    this.selGame = __bind(this.selGame, this);
    this.rebuildUI = __bind(this.rebuildUI, this);
    this.mediaPlayHelper = new MediaPlayHelper({
      click: "assets/click.mp3",
      ok: "assets/blip.mp3",
      fail: "assets/fail.mp3"
    });
    this.curTileIdx = 0;
  }

  SpideyAppUI.prototype.init = function() {
    $("body").prepend("<div id=\"sqWrapper\">\n	<div id=\"gamesAvailable\">\n	</div>\n	<div id=\"gamebuttons\">\n	</div>\n</div>");
    $(window).on('orientationchange', (function(_this) {
      return function() {
        return _this.rebuildUI();
      };
    })(this));
    $(window).on('resize', (function(_this) {
      return function() {
        return _this.rebuildUI();
      };
    })(this));
    this.buttonColours = ["red", "green", "blue", "brown"];
    this.nextButtonColour = 0;
    return this.gamesAvail = {};
  };

  SpideyAppUI.prototype.rebuildUI = function() {};

  SpideyAppUI.prototype.showGamesAvailable = function(showIt) {
    if (showIt) {
      return $("#gamesAvailable").show();
    } else {
      return $("#gamesAvailable").hide();
    }
  };

  SpideyAppUI.prototype.showGameUI = function(showIt) {
    if (showIt) {
      return $("#gamebuttons").show();
    } else {
      return $("#gamebuttons").hide();
    }
  };

  SpideyAppUI.prototype.addGame = function(game, gameClick) {
    this.addButton(this.getButtonColour(), this.selGame, game.gameName, game.gameName, game.gameName, game.gameIcon, 100, 100, "#gamesAvailable", 2);
    this.gamesAvail[game.gameName] = {
      game: game,
      gameClick: gameClick
    };
  };

  SpideyAppUI.prototype.selGame = function(param) {
    if (param in this.gamesAvail) {
      return this.gamesAvail[param].gameClick(this.gamesAvail[param].game);
    }
  };

  SpideyAppUI.prototype.getButtonColour = function() {
    var butCol;
    butCol = this.buttonColours[this.nextButtonColour];
    this.nextButtonColour += 1;
    if (this.nextButtonColour >= this.buttonColours.length) {
      this.nextButtonColour = 0;
    }
    return butCol;
  };

  SpideyAppUI.prototype.addButton = function(colour, clickFn, clickParam, name, text, iconname, x, y, parentselector, size) {
    var button, tb;
    tb = new TileBasics(colour, size, size, clickFn, clickParam, name, "all", parentselector, "gamebutton", iconname, true, this.mediaPlayHelper);
    tb.setTierGroupIds(0, 0);
    button = new Tile(tb);
    button.setTileIndex(this.curTileIdx);
    this.curTileIdx += 1;
    button.addToDoc();
    button.reposition(x, y, size * 100, size * 100, 1);
    button.setText(text);
  };

  SpideyAppUI.prototype.showGamePad = function(tlx, tly) {
    this.addButton("red", this.arrowClick, "up", "up", "UP", "appbar.arrow.up.svg", tlx + 200, tly, "#gamebuttons", 2);
    this.addButton("yellow", this.arrowClick, "left", "left", "LEFT", "appbar.arrow.left.svg", tlx, tly + 200, "#gamebuttons", 2);
    this.addButton("green", this.arrowClick, "down", "down", "DOWN", "appbar.arrow.down.svg", tlx + 200, tly + 400, "#gamebuttons", 2);
    this.addButton("blue", this.arrowClick, "right", "right", "RIGHT", "appbar.arrow.right.svg", tlx + 400, tly + 200, "#gamebuttons", 2);
  };

  return SpideyAppUI;

})();
