// Generated by CoffeeScript 1.8.0
var SpideyGame_PacMan,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SpideyGame_PacMan = (function(_super) {
  __extends(SpideyGame_PacMan, _super);

  function SpideyGame_PacMan(spideyApp, spideyWall, spideyAppUI) {
    this.spideyApp = spideyApp;
    this.spideyWall = spideyWall;
    this.spideyAppUI = spideyAppUI;
    this.testStart = __bind(this.testStart, this);
    this.stepTest = __bind(this.stepTest, this);
    this.directionCallback = __bind(this.directionCallback, this);
    this.step = __bind(this.step, this);
    this.exitClick = __bind(this.exitClick, this);
    SpideyGame_PacMan.__super__.constructor.call(this, "PacMan", "pacman.svg");
    this.me = new PacManSprite("me", 39, "green", this.spideyWall);
    this.baddies = [new PacManSprite("bad1", 66, "red", this.spideyWall), new PacManSprite("bad2", 75, "red", this.spideyWall)];
    return;
  }

  SpideyGame_PacMan.prototype.go = function() {
    this.spideyAppUI.showGamePad(200, 100, this.directionCallback, true);
    this.gameTimer = setInterval(this.step, 100);
  };

  SpideyGame_PacMan.prototype.exitClick = function() {
    clearInterval(this.gameTimer);
    return this.spideyApp.exitGame();
  };

  SpideyGame_PacMan.prototype.showSprites = function() {
    var actor, _i, _len, _ref;
    this.spideyWall.preShowAll();
    _ref = this.baddies;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      actor = _ref[_i];
      actor.show();
    }
    this.me.show();
    this.spideyWall.showAll();
  };

  SpideyGame_PacMan.prototype.step = function() {
    var actor, _i, _len, _ref;
    this.me.moveMe();
    _ref = this.baddies;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      actor = _ref[_i];
      actor.moveBaddie(this.me);
    }
    this.showSprites();
  };

  SpideyGame_PacMan.prototype.directionCallback = function(param) {
    return this.changeDirection(param);
  };

  SpideyGame_PacMan.prototype.mouseover = function(dirn) {
    return this.changeDirection(dirn);
  };

  SpideyGame_PacMan.prototype.changeDirection = function(dirn) {
    this.me.setDirection(dirn);
  };

  SpideyGame_PacMan.prototype.getDebugInfo = function() {
    return "N " + this.me.curLocation.node + " L " + this.me.curLocation.linkIdx + " S " + this.me.curLocation.linkStep;
  };

  SpideyGame_PacMan.prototype.stepTest = function() {
    this.spideyWall.preShowAll();
    this.spideyWall.sendLedCmd(this.testCurLed, "red");
    this.spideyWall.showAll();
    this.testCurLed += 1;
  };

  SpideyGame_PacMan.prototype.testStart = function() {
    this.testCurLed = 0;
    this.tmr = setInterval(this.stepTest, 50);
  };

  SpideyGame_PacMan.prototype.testEnd = function() {
    clearInterval(this.tmr);
  };

  return SpideyGame_PacMan;

})(SpideyGame);
