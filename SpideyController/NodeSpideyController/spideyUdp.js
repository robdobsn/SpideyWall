// Generated by CoffeeScript 1.7.1
var dgram;

dgram = require('dgram');

this.SpideyUDP = (function() {
  SpideyUDP.prototype.serverReady = false;

  function SpideyUDP(spidey_UDP_IP, spidey_udp_port) {
    this.spidey_UDP_IP = spidey_UDP_IP;
    this.spidey_udp_port = spidey_udp_port;
    this.server = dgram.createSocket("udp4");
    this.server.on("error", (function(_this) {
      return function(err) {
        console.log("server error:\n" + err.stack);
        _this.server.close();
      };
    })(this));
    this.server.on("message", (function(_this) {
      return function(msg, rinfo) {
        console.log("server got: " + msg + " from " + rinfo.address + ":" + rinfo.port);
      };
    })(this));
    this.server.on("listening", (function(_this) {
      return function() {
        var address;
        address = _this.server.address();
        console.log("server listening " + address.address + ":" + address.port);
        return _this.serverReady = true;
      };
    })(this));
    this.server.bind(this.spidey_udp_port);
  }

  SpideyUDP.prototype.execCmd = function(cmdStr) {
    var cmdmsg;
    cmdmsg = new Buffer(cmdStr, 'hex');
    console.log("Sending len " + cmdmsg.length);
    this.server.send(cmdmsg, 0, cmdmsg.length, this.spidey_udp_port, this.spidey_UDP_IP, function(err, bytes) {
      if (err) {
        console.log("UDP send error = " + err);
        throw err;
      } else {
        return console.log("UDP sent " + bytes + " bytes");
      }
    });
  };

  return SpideyUDP;

})();
